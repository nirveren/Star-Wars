{"version":3,"file":"static/js/895.ae7d35dc.chunk.js","mappings":"oLACA,EAA0B,6BAA1B,EAAyE,qCAAzE,EAA2H,gCAA3H,EAA2K,mCAA3K,EAA4N,iCAA5N,EAA2Q,iC,2BCyC3Q,EApCoB,SAAHA,GAAuB,IAAlBC,EAAWD,EAAXC,YAClBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAQhC,OAPEI,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC6D,OAApDL,EAAaZ,EAAYkB,KAAI,SAAAC,GAAG,OAAIC,EAAAA,EAAAA,IAAWD,EAAI,IAACJ,EAAAE,KAAA,GACnCI,EAAAA,EAAAA,IAAsBT,GAAY,KAAD,EAAlDC,EAAQE,EAAAO,KACdhB,EAAaO,GAAU,wBAAAE,EAAAQ,OAAA,GAAAZ,EAAA,IAH3BH,EAKJ,GAAG,KAEHgB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAeF,UAC3BF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAuBF,SACjCrB,EACAwB,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,WAAaD,EAAEC,UAAU,IAC1Cd,KAAI,SAAAe,GAAA,IAAEC,EAAKD,EAALC,MAAOF,EAAUC,EAAVD,WAAU,OACxBG,EAAAA,EAAAA,MAAA,MAAIR,UAAWC,EAAkBF,SAAA,EAC7BS,EAAAA,EAAAA,MAAA,QAAMR,UAAWC,EAAqBF,SAAA,CAAC,WAASM,MAChDR,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAmBF,SAAC,OACrCF,EAAAA,EAAAA,KAAA,QAAMG,UAAWC,EAAmBF,SAAEQ,MAHHF,EAIlC,SAOjB,C","sources":["webpack://star-app/./src/components/PersonPage/PersonFilms/PersonFilms.module.css?02f6","components/PersonPage/PersonFilms/PersonFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PersonFilms_wrapper__I-kYf\",\"list__container\":\"PersonFilms_list__container__eyG8R\",\"list__item\":\"PersonFilms_list__item__HAFxt\",\"item__episode\":\"PersonFilms_item__episode__kJGFY\",\"item__colon\":\"PersonFilms_item__colon__-rbL+\",\"item__title\":\"PersonFilms_item__title__75iiB\"};","import PropTypes from 'prop-types';\nimport styles from './PersonFilms.module.css';\nimport { makeConcurrentRequest, changeHttp } from '../../../utils/network';\nimport { useState, useEffect } from 'react';\n\n\nconst PersonFilms = ({personFilms}) => {\n    const [filmsName, setFilmsName] = useState([]);\n    useEffect(()=> {\n        (async () => {\n            const filmsHttps = personFilms.map(url => changeHttp(url));\n            const response = await makeConcurrentRequest(filmsHttps);\n            setFilmsName(response);\n        })();\n    }, [])\n  return(\n    <>\n    <div className={styles.wrapper}>\n        <ul className={styles.list__container}>\n            {filmsName\n            .sort((a, z) => a.episode_id - z.episode_id)\n            .map(({title, episode_id}) => \n            <li className={styles.list__item} key={episode_id}>\n                <span className={styles.item__episode}>Episode {episode_id}</span>\n                <span className={styles.item__colon}>:</span>\n                <span className={styles.item__title}>{title}</span>\n            </li>\n            )} \n        </ul>\n    </div>\n    </>\n    \n  )\n}\n\n\n\nPersonFilms.propTypes = {\n        personFilms: PropTypes.array\n}\n\n\nexport default PersonFilms;"],"names":["_ref","personFilms","_useState","useState","_useState2","_slicedToArray","filmsName","setFilmsName","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","filmsHttps","response","wrap","_context","prev","next","map","url","changeHttp","makeConcurrentRequest","sent","stop","_jsx","_Fragment","children","className","styles","sort","a","z","episode_id","_ref3","title","_jsxs"],"sourceRoot":""}